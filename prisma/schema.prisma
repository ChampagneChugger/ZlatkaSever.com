// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model VideoSessions {
  id     Int    @id @default(autoincrement())
  url    String
  User   User   @relation(fields: [userId], references: [id])
  userId String
}

model PostLikes {
  id Int @id @default(autoincrement())

  Post   Post   @relation(fields: [postId], references: [id])
  postId Int
  User   User   @relation(fields: [userId], references: [id])
  userId String
}

model Post {
  id         Int         @id @default(autoincrement())
  slug       String      @unique
  title      String
  coverImage String      @default("../thumbnail.jpg")
  content    String
  User       User        @relation(fields: [userId], references: [id])
  userId     String
  PostLikes  PostLikes[]
  likes      BigInt      @default(0)
  views      BigInt      @default(0)
}

model Page {
  id      Int    @id @default(autoincrement())
  slug    String @unique
  title   String
  content String
  User    User   @relation(fields: [userId], references: [id])
  userId  String
}

model User {
  id              String          @id @unique
  name            String
  username        String          @unique
  role            Int             @default(0)
  profile_picture String          @default("/korisnik.svg")
  email           String          @unique
  about           String?
  posts           Post[]
  pages           Page[]
  PostLikes       PostLikes[]
  VideoSessions   VideoSessions[]
  session         Session[]
  Key             Key[]

  @@map("user")
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("session")
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  primary         Boolean
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("key")
}
